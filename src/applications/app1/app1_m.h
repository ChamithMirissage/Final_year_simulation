//
// Generated file, do not edit! Created by nedtool 5.6 from applications/app1/app1.msg.
//

#ifndef __APP1_M_H
#define __APP1_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>applications/app1/app1.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet App1
 * {
 *     double speed;
 *     int acceleration;
 *     int lane;
 *     int id;
 *     string vehicle_type;
 * }
 * </pre>
 */
class App1 : public ::omnetpp::cPacket
{
  protected:
    double speed;
    int acceleration;
    int lane;
    int id;
    ::omnetpp::opp_string vehicle_type;

  private:
    void copy(const App1& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const App1&);

  public:
    App1(const char *name=nullptr, short kind=0);
    App1(const App1& other);
    virtual ~App1();
    App1& operator=(const App1& other);
    virtual App1 *dup() const override {return new App1(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual double getSpeed() const;
    virtual void setSpeed(double speed);
    virtual int getAcceleration() const;
    virtual void setAcceleration(int acceleration);
    virtual int getLane() const;
    virtual void setLane(int lane);
    virtual int getId() const;
    virtual void setId(int id);
    virtual const char * getVehicle_type() const;
    virtual void setVehicle_type(const char * vehicle_type);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const App1& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, App1& obj) {obj.parsimUnpack(b);}


#endif // ifndef __APP1_M_H

